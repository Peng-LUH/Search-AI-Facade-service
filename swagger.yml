openapi: 3.0.3
info:
  title: SEARCH Gateway Service
  description: SEARCH Gateway Service using Flask, OpenAPI and Connexion
  version: "1.0.0"
servers:
  - url: http://localhost:8000
    description: Rest Server for SEARCH-AI-Gateway
paths:
  /skill/{id}:
    get:
      operationId: sse_gateway.getSkill
      tags:
        - SSE Services
      summary: Return an skill with given ID
      description: Return an skill with given ID
      parameters:
        - name: id
          in: path
          description: skill ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200": # status code
          description: Return an skill with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
  /learningUnits/showAllLearningUnits:
    get:
      operationId: sse_gateway.getAllLU
      tags:
        - SSE Services
      summary: Lists all learningUnits.
      description: Lists all learningUnits.
      responses:
        "200": # status code
          description: Return an skill with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
  /upstream/test_upstream:
    get:
      operationId: l3s_gateway.testUP
      tags:
        - L3S Services
      summary: Test of UpStreamService.
      description: Test of UpStreamService.
      responses:
        "200": # status code
          description: Return an skill with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
  /downstream/test_downstream:
    get:
      operationId: l3s_gateway.testDown
      tags:
        - L3S Services
      summary: Test of DownService.
      description: Test of DownService.
      responses:
        "200": # status code
          description: Return an skill with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'                            

components:
  schemas:
     SkillDto:
      type: object
      properties:
        id:
          type: string
        nestedSkills:
          type: array
          items:
            type: string
        name:
          type: string
        level:
          type: number
        description:
          type: string
      required:
        - id
        - nestedSkills
        - name
        - level